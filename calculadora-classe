import 'package:flutter/material.dart';
import 'dart:math';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        appBar: AppBar(
          title: Center(
            child: Text(
              'Calculadora',
              textAlign: TextAlign.center,
              style: TextStyle(
                color: Colors.white,
                fontWeight: FontWeight.bold,
              ),
            ),
          ),
          backgroundColor: Colors.orange,
          foregroundColor: Colors.white,
          toolbarHeight: kToolbarHeight,
        ),
        body: SomadorForm(),
        backgroundColor: Color(0xFF373739),
      ),
    );
  }
}

class SomadorForm extends StatefulWidget {
  @override
  _SomadorFormState createState() => _SomadorFormState();
}

class _SomadorFormState extends State<SomadorForm> {
  final TextEditingController _numero1 = TextEditingController();
  final TextEditingController _numero2 = TextEditingController();
  String _resultado = '';

  void _somar() {
    final double? numero1 = double.tryParse(_numero1.text);
    final double? numero2 = double.tryParse(_numero2.text);
    Calculadora calc = Calculadora();

    if (numero1 != null && numero2 != null) {
      calc.num1 = numero1;
      calc.num2 = numero2;
      calc.somar();

      setState(() {
        _resultado = 'Resultado: ${calc.resultado}';
      });
    } else {
      setState(() {
        _resultado = 'Por favor, insira números válidos.';
      });
    }
  }

  void _subtrair() {
    final double? numero1 = double.tryParse(_numero1.text);
    final double? numero2 = double.tryParse(_numero2.text);
    Calculadora calc = Calculadora();

    if (numero1 != null && numero2 != null) {
      calc.num1 = numero1;
      calc.num2 = numero2;
      calc.subtrair();

      setState(() {
        _resultado = 'Resultado: ${calc.resultado}';
      });
    } else {
      setState(() {
        _resultado = 'Por favor, insira números válidos.';
      });
    }
  }
  
   void _multiplicar() {
    final double? numero1 = double.tryParse(_numero1.text);
    final double? numero2 = double.tryParse(_numero2.text);
    Calculadora calc = Calculadora();

    if (numero1 != null && numero2 != null) {
      calc.num1 = numero1;
      calc.num2 = numero2;
      calc.multiplicar();

      setState(() {
        _resultado = 'Resultado: ${calc.resultado}';
      });
    } else {
      setState(() {
        _resultado = 'Por favor, insira números válidos.';
      });
    }
  }
  
   void _dividir() {
    final double? numero1 = double.tryParse(_numero1.text);
    final double? numero2 = double.tryParse(_numero2.text);
    Calculadora calc = Calculadora();

    if (numero1 != null && numero2 != null) {
      calc.num1 = numero1;
      calc.num2 = numero2;
      calc.dividir();

      setState(() {
        _resultado = 'Resultado: ${calc.resultado}';
      });
    } else {
      setState(() {
        _resultado = 'Por favor, insira números válidos.';
      });
    }
  }

  
  void _elevar() {
    final double? numero1 = double.tryParse(_numero1.text);
    final double? numero2 = double.tryParse(_numero2.text);
    Calculadora calc = Calculadora();

    if (numero1 != null && numero2 != null) {
      calc.num1 = numero1;
      calc.num2 = numero2;
      calc.elevar();

      setState(() {
        _resultado = 'Resultado: ${calc.resultado}';
      });
    } else {
      setState(() {
        _resultado = 'Por favor, insira números válidos.';
      });
    }
  }

  void _fatorar() {
    final double? numero1 = double.tryParse(_numero1.text);
    final double? numero2 = double.tryParse(_numero2.text);
    Calculadora calc = Calculadora();

    if (numero1 != null && numero2 != null) {
      calc.num1 = numero1;
      calc.num2 = numero2;
      calc.fatorar();

      setState(() {
        _resultado = 'Resultado: ${calc.resultado}';
      });
    } else {
      setState(() {
        _resultado = 'Por favor, insira números válidos.';
      });
    }
  }
  
  void _raiz() {
    final double? numero1 = double.tryParse(_numero1.text);
    final double? numero2 = double.tryParse(_numero2.text);
    Calculadora calc = Calculadora();

    if (numero1 != null && numero2 != null) {
      calc.num1 = numero1;
      calc.num2 = numero2;
      calc.raiz();

      setState(() {
        _resultado = 'Resultado: ${calc.resultado}';
      });
    } else {
      setState(() {
        _resultado = 'Por favor, insira números válidos.';
      });
    }
  }
  
   void _mmc() {
    final double? numero1 = double.tryParse(_numero1.text);
    final double? numero2 = double.tryParse(_numero2.text);
    Calculadora calc = Calculadora();

    if (numero1 != null && numero2 != null) {
      calc.num1 = numero1;
      calc.num2 = numero2;
      calc.mmc();

      setState(() {
        _resultado = 'Resultado: ${calc.resultado}';
      });
    } else {
      setState(() {
        _resultado = 'Por favor, insira números válidos.';
      });
    }
  }
  
   void _resto() {
    final double? numero1 = double.tryParse(_numero1.text);
    final double? numero2 = double.tryParse(_numero2.text);
    Calculadora calc = Calculadora();

    if (numero1 != null && numero2 != null) {
      calc.num1 = numero1;
      calc.num2 = numero2;
      calc.resto();

      setState(() {
        _resultado = 'Resultado: ${calc.resultado}';
      });
    } else {
      setState(() {
        _resultado = 'Por favor, insira números válidos.';
      });
    }
  }
  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.all(16.0),
      child: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: [
          TextField(
            controller: _numero1,
            decoration: InputDecoration(labelText: 'Número 1'),
            keyboardType: TextInputType.numberWithOptions(decimal: true),
          ),
          TextField(
            controller: _numero2,
            decoration: InputDecoration(labelText: 'Número 2'),
            keyboardType: TextInputType.numberWithOptions(decimal: true),
          ),
          SizedBox(height: 20),
          Row(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              ElevatedButton(
                onPressed: _somar,
                child: Text('+', style: TextStyle(fontSize: 25)),
              ),
              SizedBox(width: 20), // Espaçamento entre os botões
              ElevatedButton(
                onPressed: _subtrair,
                child: Text('-', style: TextStyle(fontSize: 25)),
              ),
              SizedBox(width: 20), // Espaçamento entre os botões
              ElevatedButton(
                onPressed: _multiplicar,
                child: Text('x', style: TextStyle(fontSize: 25)),
              ),
              SizedBox(width: 20), // Espaçamento entre os botões
              ElevatedButton(
                onPressed: _dividir,
                child: Text('/', style: TextStyle(fontSize: 25)),
              ),
              SizedBox(width: 20), // Espaçamento entre os botões
              ElevatedButton(
                onPressed: _elevar,
                child: Text('^', style: TextStyle(fontSize: 25)),
              ),
              SizedBox(width: 20), // Espaçamento entre os botões
              ElevatedButton(
                onPressed: _fatorar,
                child: Text('!', style: TextStyle(fontSize: 25)),
              ),
              SizedBox(width: 20), // Espaçamento entre os botões
              ElevatedButton(
                onPressed: _raiz,
                child: Text('√', style: TextStyle(fontSize: 25)),
              ),
              SizedBox(width: 20), // Espaçamento entre os botões
              ElevatedButton(
                onPressed: _mmc,
                child: Text('M', style: TextStyle(fontSize: 25)),
              ),
              SizedBox(width: 20), // Espaçamento entre os botões
              ElevatedButton(
                onPressed: _resto,
                child: Text('%', style: TextStyle(fontSize: 25)),
              ),
            ],
          ),
          SizedBox(height: 20),
          Text(_resultado, style: TextStyle(fontSize: 24)),
        ],
      ),
    );
  }
}

class Calculadora {
  late double _num1;
  late double _num2;
  late double _resultado;


  // Getter
  double get num1 => _num1;
  // Setter
  set num1(double valor) => _num1 = valor;
  
  // Getter
  double get num2 => _num2;
  // Setter
  set num2(double valor) => _num2 = valor;
  
  // Getter
  double get resultado => _resultado;

  // Somar
  void somar() {
    _resultado = num1 + num2;
  }

  // Subtrair
  void subtrair() {
    _resultado = num1 - num2;
  }
  
  // Multiplicar
  void multiplicar() {
    _resultado = num1 * num2;
  }
  
  // Dividir
  void dividir() {
    _resultado = num1 / num2;
  }
  
    // Elevar
  void elevar() {
    _resultado = num1 + num2;
  }

  // Fatorar
  void fatorar() {
    _resultado = num1 - num2;
  }
  
  // Raiz
  void raiz() {
    _resultado = num1 - num2;
  }
  
  // MMC
  void mmc() {
    _resultado = (num1 * num2) ~/ calcularMDC(num1, num2);
  }
  
  // Resto
  void resto() {
    _resultado = num1 % num2;
  }
}
